---
import type { MarkdownHeading } from "astro";
import type { CollectionEntry } from "astro:content";
import TableOfContents from "../components/TableOfContents.astro";
import TagLinks from "../components/TagLinks.astro";
import { buildToc } from "../lib/table-of-contents";
import BaseLayout from "./BaseLayout.astro";

interface Props {
  frontmatter: CollectionEntry<"posts">["data"];
  readingTime: string;
  headings: MarkdownHeading[];
}

const { frontmatter, readingTime, headings } = Astro.props;
const toc = buildToc(headings, 0);
---

{
  frontmatter.katex && (
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css"
      integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV"
      crossorigin="anonymous"
    />
  )
}

<BaseLayout pageTitle={frontmatter.title}>
  <h1>{frontmatter.title}</h1>
  <p>
    Published on {frontmatter.date.toString().slice(0, 10)} - {readingTime}
  </p>
  <TagLinks tags={frontmatter.tags} />
  <div class="toc">
    <TableOfContents toc={toc} />
  </div>
  <main>
    <slot />
  </main>
</BaseLayout>

<style>
  @media screen and (min-width: 2000px) {
    .toc {
      position: fixed;
      left: 1rem;
      overflow: scroll;
      top: 10vh;
      max-height: 80vh;
    }
  }

  .toc {
    display: inline-block;
    background-color: var(--bg-color-2);
    border-radius: 1em;
    padding-right: 1ch;
  }
</style>
